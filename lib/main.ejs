 (function(modules) {
 	var installedModules = {};
 	function mypack_require(moduleId) {
 		if(installedModules[moduleId]) {
 			return installedModules[moduleId].exports;
 		}
 		var module = installedModules[moduleId] = {
 			i: moduleId,
 			l: false,
 			exports: {}
 		};
 		modules[moduleId].call(module.exports, module, module.exports, mypack_require);
 		module.l = true;
 		return module.exports;
 	}
 	mypack_require.m = modules;
 	mypack_require.c = installedModules;
 	mypack_require.d = function(exports, name, getter) {
 		if(!mypack_require.o(exports, name)) {
 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
 		}
 	};
 	mypack_require.r = function(exports) {
 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
 		}
 		Object.defineProperty(exports, '__esModule', { value: true });
 	};
 	mypack_require.t = function(value, mode) {
 		if(mode & 1) value = mypack_require(value);
 		if(mode & 8) return value;
 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
 		var ns = Object.create(null);
 		mypack_require.r(ns);
 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
 		if(mode & 2 && typeof value != 'string') for(var key in value) mypack_require.d(ns, key, function(key) { return value[key]; }.bind(null, key));
 		return ns;
 	};
 	mypack_require.n = function(module) {
 		var getter = module && module.__esModule ?
 			function getDefault() { return module['default']; } :
 			function getModuleExports() { return module; };
 		mypack_require.d(getter, 'a', getter);
 		return getter;
 	};
 	mypack_require.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
 	mypack_require.p = "";
 	return mypack_require(mypack_require.s = "<%-entryId%>");
 })
 ({
   <%for(let key in modules){%>
   "<%-key%>":
  (function(module, exports, mypack_require) {
    eval(`<%-modules[key]%>`)
  }),
  <%}%>
});